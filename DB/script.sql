CREATE TABLE USER (
	USERNAME VARCHAR(100) PRIMARY KEY,
	PASSWORD VARCHAR(100) NOT NULL DEFAULT '',
	PROFILE_NAME VARCHAR(100),
	EMAIL VARCHAR(100) NOT NULL,
	IMAGE_URL VARCHAR(200),
	SOCIAL BOOLEAN DEFAULT FALSE,
	ADMIN BOOLEAN DEFAULT FALSE
);

CREATE TABLE CATEGORY(
	TYPE VARCHAR(100) PRIMARY KEY,
	POINTS INT NOT NULL
);

CREATE TABLE DISH (
	ID INT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(100) NOT NULL,
	DESCRIPTION VARCHAR(500),  
	AVG_RATING FLOAT DEFAULT 0,
	IMAGE_URL VARCHAR(100),
	CATEGORY VARCHAR(100) NOT NULL
);

CREATE TABLE RATING (
	USERNAME VARCHAR(100),
	DISH INT,
	POINTS FLOAT NOT NULL DEFAULT '0',
	PRIMARY KEY (USERNAME,DISH),
	FOREIGN KEY (USERNAME) REFERENCES USER(USERNAME),
	FOREIGN KEY (DISH) REFERENCES DISH (ID)
	
);

CREATE TABLE COMMENT (
	USERNAME VARCHAR(100),
	DISH INT,
	DATA TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	TEXT VARCHAR(500),
	PRIMARY KEY (USERNAME,DISH,DATA),
	FOREIGN KEY (USERNAME) REFERENCES USER(USERNAME),
	FOREIGN KEY (DISH) REFERENCES DISH (ID)
	
);

CREATE TABLE DAILYMENU (
	MENUDATE DATE,
	DISH INT NOT NULL,
	PRIMARY KEY (MENUDATE,DISH),
	FOREIGN KEY (DISH) REFERENCES DISH (ID)
);

CREATE TABLE CAFETERIA(
	NAME VARCHAR (50) PRIMARY KEY,
	LATITUDE DOUBLE NOT NULL,
	LONGITUDE DOUBLE NOT NULL
);

INSERT INTO CATEGORY(TYPE,POINTS)
VALUES ('Main Course',1);
INSERT INTO CATEGORY(TYPE,POINTS)
VALUES ('Second Course', 2);
INSERT INTO CATEGORY(TYPE,POINTS)
VALUES ('Side Dish',1);


INSERT INTO CAFETERIA(NAME,LATITUDE, LONGITUDE)
VALUES ('Mensa Marteensson',39.362148, 16.223682);

INSERT INTO CAFETERIA(NAME,LATITUDE, LONGITUDE)
VALUES ('Mensa Maisonettes',39.355520, 16.225190);

INSERT INTO CAFETERIA(NAME,LATITUDE, LONGITUDE)
VALUES ('Mensa del Teatro',39.368039, 16.225115);


INSERT INTO DISH (NAME, DESCRIPTION, IMAGE_URL, CATEGORY)
VALUES ('Pasta alla Portofino','La pasta alla Portofino è un gustoso primo piatto che nasce dal delizioso incontro fra il pesto genovese e il sugo di pomodoro. Si narra che l’idea sia nata quando un ristoratore di Portofino, appunto, non aveva sufficiente pesto per soddisfare tutte le ordinazioni e decise, così, di mischiarlo al sugo di pomodoro semplice per aumentare la quantità del condimento.','http://img.tgcom24.mediaset.it/binary/tgcom24/95.$plit/C_4_ricetta_350_upiFoto.jpg', 1);


INSERT INTO DISH (NAME, DESCRIPTION, IMAGE_URL, CATEGORY)
VALUES ('Mezze maniche alla Norcina','Piatto tipico di Perugia e Norcia, caratterizzata dalla presenza fondamentale della salsiccia umbra, dal sapore deciso e notevole.','http://media-cdn.tripadvisor.com/media/photo-s/06/06/e1/a0/da-pallotta-1820.jpg', 1);


INSERT INTO DISH (NAME,IMAGE_URL, CATEGORY)
VALUES ('Farfalle zucchine e gamberetti','http://www.molinodiferro.com/images/ricette/farfalle-gamberetti-zucchine-basilico.jpg', 1);

INSERT INTO DISH (NAME, DESCRIPTION, IMAGE_URL, CATEGORY)
VALUES ('Parmiggiana di melanzane','La parmigiana di melanzane o anche, melanzane alla parmigiana, o semplicemente parmigiana, è un piatto a base di melanzane fritte e gratinate in forno con passata di pomodoro, basilico, aglio e uno o più formaggi inclusi pecorino siciliano, mozzarella, scamorza e caciocavallo.','http://grandenapoli.it/wp-content/uploads/parmigiana-napoletana.jpg', 2);

INSERT INTO DISH (NAME, IMAGE_URL, CATEGORY)
VALUES ('Salsiccia con patate','http://media.gustoblog.it/1/1e6/Patate-in-padella-croccanti-con-salsiccia-586x389.jpg', 2);

INSERT INTO DISH (NAME, IMAGE_URL, CATEGORY)
VALUES ('Merluzzo gratinato','http://lemiericette5.altervista.org/wp-content/uploads/2014/03/98f3fcbfdca555b817c7012204f6d0c4531ee5e83e07b.jpg', 2);

INSERT INTO DISH (NAME, IMAGE_URL, CATEGORY)
VALUES ('Fagiolini','http://static.pourfemme.it/625X0/dieta/pourfemme/it/img/insalata_fagiolini.jpg', 3);
INSERT INTO DISH (NAME, IMAGE_URL, CATEGORY)
VALUES ('Carote','https://www.wellme.it/images/stories/alimentazione/ricette/insalata_carote_crude.jpg', 3);

INSERT INTO DAILYMENU (MENUDATE, DISH)
VALUES ('2015-10-26',1);

INSERT INTO DAILYMENU (MENUDATE, DISH)
VALUES ('2015-10-26',4);

INSERT INTO DAILYMENU (MENUDATE, DISH)
VALUES ('2015-10-26',7);

INSERT INTO DAILYMENU (MENUDATE, DISH)
VALUES ('2015-11-03',1);

INSERT INTO DAILYMENU (MENUDATE, DISH)
VALUES ('2015-11-06',4);

INSERT INTO DAILYMENU (MENUDATE, DISH)
VALUES ('2015-11-06',7);

DELIMITER $$
CREATE PROCEDURE addUser (IN username VARCHAR (100), IN password VARCHAR (100), IN email VARCHAR (100)) 
BEGIN  
INSERT INTO USER (USERNAME, PASSWORD, EMAIL)
VALUES (username,password, email);
END; $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE setImageToUser (IN username VARCHAR (100), image_url VARCHAR(100)) 
BEGIN  
UPDATE USER
SET USER.IMAGE_URL = image_url
WHERE USER.USERNAME = username;
END; $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE setProfileName (IN username VARCHAR (100), profile_Name VARCHAR(100)) 
BEGIN  
UPDATE USER
SET USER.PROFILE_NAME = profile_Name
WHERE USER.USERNAME = username;
END; $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE updateDish (IN name VARCHAR (100), IN description VARCHAR(500), IN image_url VARCHAR(100), IN category VARCHAR (100)) 
BEGIN  
INSERT INTO DISH (NAME, DESCRIPTION, IMAGE_URL, CATEGORY)
VALUES (name, description, image_url, category);
END; $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE addDish (IN id INT, IN name VARCHAR (100), IN description VARCHAR(500), IN image_url VARCHAR(100), IN category VARCHAR (100)) 
BEGIN  
UPDATE DISH
SET DISH.NAME= name, DISH.DESCRIPTION = description, DISH.IMAGE_URL =image_url, DISH.CATEGORY = category
WHERE DISH.ID=id;
END; $$
DELIMITER ;



DELIMITER $$
CREATE PROCEDURE addComment (IN user VARCHAR(100), IN idDish INT, IN text VARCHAR(500)) 
BEGIN  
DECLARE data TIMESTAMP;
SET data = NOW();
INSERT INTO COMMENT (USERNAME, DISH, DATA, TEXT)
VALUES (user, idDish, data , text);
SELECT USER.USERNAME, USER.PROFILE_NAME, USER.SOCIAL, USER.IMAGE_URL, COMMENT.DISH, COMMENT.TEXT, COMMENT.DATA 
FROM USER, COMMENT 
WHERE USER.USERNAME =COMMENT.USERNAME AND COMMENT.DISH= IdDish AND COMMENT.DATA=data;
END; $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE updateComment (IN user VARCHAR(100), IN idDish INT,IN data TIMESTAMP, IN text VARCHAR(500)) 
BEGIN  
UPDATE COMMENT 
SET COMMENT.TEXT= text
WHERE COMMENT.USERNAME=user AND COMMENT.DISH= idDish AND COMMENT.DATA = data;
END; $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE deleteComment (IN user VARCHAR(100), IN idDish INT,IN data TIMESTAMP) 
BEGIN  
DELETE
FROM COMMENT
WHERE COMMENT.USERNAME=user AND COMMENT.DISH= idDish AND COMMENT.data = data;
END; $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE addRating (IN user VARCHAR(100), IN idDish INT, IN points FLOAT) 
BEGIN  
IF EXISTS (SELECT * FROM RATING WHERE USERNAME=user AND DISH=idDish )
THEN 
UPDATE RATING 
SET RATING.POINTS= points
WHERE RATING.USERNAME=user AND RATING.DISH= idDish;
ELSE
INSERT INTO RATING (USERNAME, DISH, POINTS)
VALUES (user, idDish, points);
END IF;
END; $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE addUserByID (IN id VARCHAR(100),IN image_url VARCHAR(500),IN profile_name VARCHAR(100), IN email VARCHAR (100)) 
BEGIN  
IF EXISTS (SELECT * FROM USER WHERE USERNAME=id)
THEN 
UPDATE USER 
SET USER.IMAGE_URL= image_url, USER.PROFILE_NAME= profile_name, USER.EMAIL=email
WHERE USER.USERNAME=id;
ELSE
INSERT INTO USER (USERNAME, EMAIL, PROFILE_NAME, IMAGE_URL, SOCIAL)
VALUES (id, email,profile_name,image_url, true);
END IF;
SELECT * FROM USER WHERE USERNAME=id;
END; $$
DELIMITER ;



DELIMITER $$
CREATE PROCEDURE addCafeteria (IN NAME VARCHAR(100), IN LATITUDE DOUBLE, IN LONGITUDE DOUBLE) 
BEGIN  
INSERT INTO CAFETERIA (NAME, LATITUDE, LONGITUDE)
VALUES (NAME, LATITUDE, LONGITUDE);
END; $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE updateCafeteria (IN name VARCHAR(100), IN LATITUDE DOUBLE, IN LONGITUDE DOUBLE) 
BEGIN  
UPDATE CAFETERIA 
SET CAFETERIA.LATITUDE= LATITUDE, CAFETERIA.LONGITUDE=LONGITUDE
WHERE CAFETERIA.NAME=NAME;
END; $$
DELIMITER ;

SELECT * 
FROM DISH
ORDER BY AVG_RATING DESC LIMIT 4;





DELIMITER $$
CREATE TRIGGER After_Insert_Update_Total_Rating 
AFTER INSERT ON RATING FOR EACH ROW
BEGIN
UPDATE DISH
SET AVG_RATING = (SELECT AVG(POINTS)
                                 FROM RATING AS R1
                                 WHERE R1.DISH=NEW.DISH)
WHERE DISH.ID=NEW.DISH;

END;$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER After_Update_Update_Total_Rating 
AFTER UPDATE ON RATING FOR EACH ROW
BEGIN
UPDATE DISH
SET AVG_RATING = (SELECT AVG(POINTS)
                                 FROM RATING AS R1
                                 WHERE R1.DISH=NEW.DISH)
WHERE DISH.ID=NEW.DISH;

END;$$
DELIMITER ;


SELECT *
FROM ACCOUNT AS A
WHERE A.USERNAME= ?

SELECT COUNT(*)
FROM ACCOUNT;

SELECT *
FROM  CAFETERIA;

SELECT * 
FROM COMMENT
WHERE COMMENT.DISH = ?
ORDER BY COMMENT.DATA DISC;




